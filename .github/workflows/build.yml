name: Build

on:
  push:
    branches:
      - main
  release:
    types:
      - created
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.10.10'
  VERSION: ${{ github.event.release.tag_name != '' && github.event.release.tag_name || '0.0.0' }}

jobs:
  build-python-package:
    if: github.event.release.tag_name != ''
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Poetry
        shell: bash
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'poetry'

      - name: Replace Version
        shell: bash
        run: |
          # sed -i "s/__VERSION__ = \"0.0.0\"/__VERSION__ = \"${{ env.VERSION }}\"/" aoirint_id3/__init__.py
          sed -i "s/version = \"0.0.0\"/version = \"${{ env.VERSION }}\"/" pyproject.toml

      - name: Install Dependencies
        shell: bash
        run: poetry install

      - name: Build and publish Package
        shell: bash
        run: poetry publish --build --username "__token__" --password "${{ secrets.PYPI_API_TOKEN }}"
